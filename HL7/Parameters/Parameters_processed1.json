{"Parameters": {"description": "This resource is a non-persisted resource used to pass information into and back from an [operation](operations.html). It has no other use, and there is no RESTful endpoint associated with it.", "properties": {"resourceType": {"description": "This is a Parameters resource", "const": "Parameters"}, "id": {"description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "meta": {"description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}, "versionId": {"description": "The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.", "$ref": "#/definitions/id"}, "_versionId": {"description": "Extensions for versionId", "$ref": "#/definitions/Element"}, "lastUpdated": {"description": "When the resource last changed - e.g. when the version changed.", "$ref": "#/definitions/instant"}, "_lastUpdated": {"description": "Extensions for lastUpdated", "$ref": "#/definitions/Element"}, "source": {"description": "A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.", "$ref": "#/definitions/uri"}, "_source": {"description": "Extensions for source", "$ref": "#/definitions/Element"}, "profile": {"description": "A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].", "items": {"$ref": "#/definitions/canonical"}, "type": "array"}, "security": {"description": "Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.", "items": {"$ref": "#/definitions/Coding"}, "type": "array"}, "tag": {"description": "Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.", "items": {"$ref": "#/definitions/Coding"}, "type": "array"}}, "additionalProperties": false}, "implicitRules": {"description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.", "pattern": "^\\S*$", "type": "string"}, "_implicitRules": {"description": "Extensions for implicitRules", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "language": {"description": "The base language in which the resource is written.", "pattern": "^[^\\s]+(\\s[^\\s]+)*$", "type": "string"}, "_language": {"description": "Extensions for language", "properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}}, "additionalProperties": false}, "parameter": {"description": "A parameter passed to or received from the operation.", "items": {"properties": {"id": {"description": "Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.", "$ref": "#/definitions/string"}, "extension": {"description": "May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}, "modifierExtension": {"description": "May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.\n\nModifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).", "items": {"$ref": "#/definitions/Extension"}, "type": "array"}, "name": {"description": "The name of the parameter (reference to the operation definition).", "$ref": "#/definitions/string"}, "_name": {"description": "Extensions for name", "$ref": "#/definitions/Element"}, "valueBase64Binary": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^(\\s*([0-9a-zA-Z\\+/=]){4}\\s*)+$", "type": "string"}, "_valueBase64Binary": {"description": "Extensions for valueBase64Binary", "$ref": "#/definitions/Element"}, "valueBoolean": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^true|false$", "type": "boolean"}, "_valueBoolean": {"description": "Extensions for valueBoolean", "$ref": "#/definitions/Element"}, "valueCanonical": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^\\S*$", "type": "string"}, "_valueCanonical": {"description": "Extensions for valueCanonical", "$ref": "#/definitions/Element"}, "valueCode": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^[^\\s]+(\\s[^\\s]+)*$", "type": "string"}, "_valueCode": {"description": "Extensions for valueCode", "$ref": "#/definitions/Element"}, "valueDate": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$", "type": "string"}, "_valueDate": {"description": "Extensions for valueDate", "$ref": "#/definitions/Element"}, "valueDateTime": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$", "type": "string"}, "_valueDateTime": {"description": "Extensions for valueDateTime", "$ref": "#/definitions/Element"}, "valueDecimal": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?$", "type": "number"}, "_valueDecimal": {"description": "Extensions for valueDecimal", "$ref": "#/definitions/Element"}, "valueId": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^[A-Za-z0-9\\-\\.]{1,64}$", "type": "string"}, "_valueId": {"description": "Extensions for valueId", "$ref": "#/definitions/Element"}, "valueInstant": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$", "type": "string"}, "_valueInstant": {"description": "Extensions for valueInstant", "$ref": "#/definitions/Element"}, "valueInteger": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^-?([0]|([1-9][0-9]*))$", "type": "number"}, "_valueInteger": {"description": "Extensions for valueInteger", "$ref": "#/definitions/Element"}, "valueMarkdown": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_valueMarkdown": {"description": "Extensions for valueMarkdown", "$ref": "#/definitions/Element"}, "valueOid": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^urn:oid:[0-2](\\.(0|[1-9][0-9]*))+$", "type": "string"}, "_valueOid": {"description": "Extensions for valueOid", "$ref": "#/definitions/Element"}, "valuePositiveInt": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^[1-9][0-9]*$", "type": "number"}, "_valuePositiveInt": {"description": "Extensions for valuePositiveInt", "$ref": "#/definitions/Element"}, "valueString": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^[ \\r\\n\\t\\S]+$", "type": "string"}, "_valueString": {"description": "Extensions for valueString", "$ref": "#/definitions/Element"}, "valueTime": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?$", "type": "string"}, "_valueTime": {"description": "Extensions for valueTime", "$ref": "#/definitions/Element"}, "valueUnsignedInt": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^[0]|([1-9][0-9]*)$", "type": "number"}, "_valueUnsignedInt": {"description": "Extensions for valueUnsignedInt", "$ref": "#/definitions/Element"}, "valueUri": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^\\S*$", "type": "string"}, "_valueUri": {"description": "Extensions for valueUri", "$ref": "#/definitions/Element"}, "valueUrl": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^\\S*$", "type": "string"}, "_valueUrl": {"description": "Extensions for valueUrl", "$ref": "#/definitions/Element"}, "valueUuid": {"description": "Conveys the content if the parameter is a data type.", "pattern": "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "type": "string"}, "_valueUuid": {"description": "Extensions for valueUuid", "$ref": "#/definitions/Element"}, "valueAddress": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Address"}, "valueAge": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Age"}, "valueAnnotation": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Annotation"}, "valueAttachment": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Attachment"}, "valueCodeableConcept": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/CodeableConcept"}, "valueCoding": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Coding"}, "valueContactPoint": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/ContactPoint"}, "valueCount": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Count"}, "valueDistance": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Distance"}, "valueDuration": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Duration"}, "valueHumanName": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/HumanName"}, "valueIdentifier": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Identifier"}, "valueMoney": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Money"}, "valuePeriod": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Period"}, "valueQuantity": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Quantity"}, "valueRange": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Range"}, "valueRatio": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Ratio"}, "valueReference": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Reference"}, "valueSampledData": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/SampledData"}, "valueSignature": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Signature"}, "valueTiming": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Timing"}, "valueContactDetail": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/ContactDetail"}, "valueContributor": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Contributor"}, "valueDataRequirement": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/DataRequirement"}, "valueExpression": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Expression"}, "valueParameterDefinition": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/ParameterDefinition"}, "valueRelatedArtifact": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/RelatedArtifact"}, "valueTriggerDefinition": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/TriggerDefinition"}, "valueUsageContext": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/UsageContext"}, "valueDosage": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Dosage"}, "valueMeta": {"description": "Conveys the content if the parameter is a data type.", "$ref": "#/definitions/Meta"}, "resource": {"description": "If the parameter is a whole resource.", "$ref": "#/definitions/ResourceList"}, "part": {"description": "A named part of a multi-part parameter.", "items": {"$ref": "#/definitions/Parameters_Parameter"}, "type": "array"}}, "additionalProperties": false}, "type": "array"}}, "additionalProperties": false, "required": ["resourceType"], "type": "object"}}